int button[] = {10,11,12,13};
int led[] = {4,5,6,7};

int tones[] = {262, 330, 392, 494};
int roundsToWin = 10;
int buttonSequence[16];
int buzzerPin = 2;
int pressedButton = 4;

int roundCounter = 1; 
long startTime = 0; 
long timeLimit = 2000; 
bool gameStarted = false; 
void setup() {

pinMode(button[0], INPUT_PULLUP);
pinMode(button[1], INPUT_PULLUP);
pinMode(button[2], INPUT_PULLUP);
pinMode(button[3], INPUT_PULLUP);
pinMode(led[0], OUTPUT);
pinMode(led[1], OUTPUT);
pinMode(led[2], OUTPUT);
pinMode(led[3], OUTPUT);
pinMode(buzzerPin, OUTPUT);
}
void loop() {
// loop for if game hasn't started yet
if (gameStarted == false) {
startSequence();
roundCounter = 0;
delay(1500);
gameStarted = true;
}

for (int i = 0; i <= roundCounter; i = i + 1) {
flashLED(buttonSequence[i]);
delay(200);
allLEDoff();
delay(200);
}

for (int i = 0; i <= roundCounter; i = i + 1) { 
startTime = millis(); 
while (gameStarted == true) { 
pressedButton = buttonCheck(); 
if (pressedButton < 4) { 
flashLED(pressedButton);
if (pressedButton == buttonSequence[i]) { 
delay(250); 
allLEDoff();
break; 
} else { 
loseSequence(); 
break; 
}
} else { //if no button is pressed
allLEDoff(); //turn all the LEDs off
}
//check to see if the time limit is up
if (millis() - startTime > timeLimit) { 
loseSequence(); 
break; 
}
}
}
if (gameStarted == true) {
roundCounter = roundCounter + 1; 
if (roundCounter >= roundsToWin) { 
winSequence(); 
}
delay(500); 
}
}
//----------HELPER FUNCTIONS------------
//FLASH LED
void flashLED (int ledNumber) {
digitalWrite(led[ledNumber], HIGH);
tone(buzzerPin, tones[ledNumber]);
}
//TURN ALL LEDS OFF
void allLEDoff () {
//turn all the LEDs off
digitalWrite(led[0], LOW);
digitalWrite(led[1], LOW);
digitalWrite(led[2], LOW);
digitalWrite(led[3], LOW);
//turn the buzzer off
noTone(buzzerPin);
}
//CHECK WHICH BUTTON IS PRESSED
int buttonCheck() {
//check if any buttons are being pressed
if (digitalRead(button[0]) == LOW) {
return 0;
} else if (digitalRead(button[1]) == LOW) {
return 1;
} else if (digitalRead(button[2]) == LOW) {
return 2;
} else if (digitalRead(button[3]) == LOW) {
return 3;
} else {
return 4; //this will be the value for no button being pressed
}
}
//START SEQUENCE
void startSequence() {
randomSeed(analogRead(A0));
//populate the buttonSequence array with random numbers from 0 to 3
for (int i = 0; i <= roundsToWin; i = i + 1) {
buttonSequence[i] = round(random(0, 4));
}
//flash all of the LEDs when the game starts
for (int i = 0; i <= 3; i = i + 1) {
tone(buzzerPin, tones[i], 200); //play one of the 4 tones
//turn all of the leds on
digitalWrite(led[0], HIGH);
digitalWrite(led[1], HIGH);
digitalWrite(led[2], HIGH);
digitalWrite(led[3], HIGH);
delay(100);
//turn all of the leds off
digitalWrite(led[0], LOW);
digitalWrite(led[1], LOW);
digitalWrite(led[2], LOW);
digitalWrite(led[3], LOW);
delay(100);
} //this will repeat 4 times
}
//WIN SEQUENCE
void winSequence() {
//turn all the LEDs on
for (int j = 0; j <= 3; j = j + 1) {
digitalWrite(led[j], HIGH);
}
//play the 1Up noise
tone(buzzerPin, 1318, 150); //E6
delay(175);
tone(buzzerPin, 1567, 150); //G6
delay(175);
tone(buzzerPin, 2637, 150); //E7
delay(175);
tone(buzzerPin, 2093, 150); //C7
delay(175);
tone(buzzerPin, 2349, 150); //D7
delay(175);
tone(buzzerPin, 3135, 500); //G7
delay(500);
do {
pressedButton = buttonCheck();
} while (pressedButton > 3);
delay(100);
gameStarted = false; 
}
//LOSE SEQUENCE
void loseSequence() {

for (int j = 0; j <= 3; j = j + 1) {
digitalWrite(led[j], HIGH);
}

tone(buzzerPin, 130, 250); //E6
delay(275);
tone(buzzerPin, 73, 250); //G6
delay(275);
tone(buzzerPin, 65, 150); //E7
delay(175);
tone(buzzerPin, 98, 500); //C7
delay(500);

do {
pressedButton = buttonCheck();
} while (pressedButton > 3);
delay(200);
gameStarted = false; 
}
